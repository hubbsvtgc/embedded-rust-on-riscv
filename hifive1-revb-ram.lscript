/****************************************************************************
 *
 *   Copyright (C) 2024 bsvtgc@gmail.com. All rights reserved.
 *   Author: Vincent <bsvtgc@gmail.com>
 *
 ****************************************************************************/

ENTRY(__boot_)

MEMORY
{
    ON_CHIP_DTIM(wxa): ORIGIN = 0x80000000, LENGTH = 0x4000 /* E31 DTIM 16KiB */
    /* rom   : ORIGIN = 0x20000000, LENGTH = 0x20000000 */ /* 512MB off-chip, max */
    OFF_CHIP_FLASH (wxa): ORIGIN = 0x20000000, LENGTH = 0x1000000     /* 16MiB */
}

SECTIONS
{
  .text : {
    PROVIDE(__text_start_ = .);
    KEEP(*(.boot)) /* While boot from flash, this should be at 0x2000_0000 */
    *(.text.init) *(.text .text.*)
    PROVIDE(__text_end_ = .);
  } > ON_CHIP_DTIM

  . = ALIGN(4);

  .rodata : {
    PROVIDE(__rodata_start_ = .);
     *(.rodata .rodata.*)
    PROVIDE(__rodata_end_ = .);
  } > ON_CHIP_DTIM

  . = ALIGN(4);

  .data : {
    PROVIDE(__data_start_ = .);
    *(.data .data.*)
    PROVIDE(__data_end_ = .);
  } > ON_CHIP_DTIM

  . = ALIGN(4);

  .bss : {
    PROVIDE(_bss_start_ = .);
    *(.sbss .sbss.*) *(.bss .bss.*)
    PROVIDE(_bss_end_ = .);
  } > ON_CHIP_DTIM

  . = ALIGN(4);

  PROVIDE(__stack_end_ = .);
  PROVIDE(__stack_start_ = __stack_end_ + 1024);
  PROVIDE(__trap_frame_end_ =  __stack_start_ +32); /* 32 bytes guard */
  PROVIDE(__trap_frame_start_ =  __trap_frame_end_ + 31 * 4); /* store 31 (each 4 bytes) registers */
  PROVIDE(__memory_end_ = 0x80003FFF);
}

/* Reference Link:
https://users.informatik.haw-hamburg.de/~krabat/FH-Labor/gnupro/5_GNUPro_Utilities/c_Using_LD/ld.html
 */